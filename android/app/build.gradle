plugins {
    id "com.android.application"
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"
}

// Declares a variable to contain the dart-define.
def dartDefines = [
    APP_TITLE: '[DEV] Demo_app',
    APP_ID: 'com.baseflow.demo_app.fastlane_test'
];

// This method facilitates the loading of environment variables from the .env file and --dart-define flags.
// The variables from the .env file are loaded first, the values can be overridden by the --dart-define flags.
def _loadEnvironmentVariables() {
    // Get environment variables from --dart-define flags
    if (project.hasProperty('dart-defines')) {
        project.property('dart-defines')
                .split(',').each { entry ->
            def (key, value) = new String(entry.decodeBase64(), 'UTF-8').split('=')
            System.setProperty(key, value)
        }
    }
}

_loadEnvironmentVariables()


    def localProperties = new Properties()
    def localPropertiesFile = rootProject.file('local.properties')
    if (localPropertiesFile.exists()) {
        localPropertiesFile.withReader('UTF-8') { reader ->
            localProperties.load(reader)
        }
    }

    def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
    if (flutterVersionCode == null) {
        flutterVersionCode = '1'
    }

    def flutterVersionName = localProperties.getProperty('flutter.versionName')
    if (flutterVersionName == null) {
        flutterVersionName = '1.0'
    }

    def keystoreProperties = new Properties()
    def keystorePropertiesFile = rootProject.file('../.secrets/key.properties')
    if (keystorePropertiesFile.exists()) {
        keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
    }

    android {
        namespace dartDefines.APP_ID
        compileSdkVersion 34 // flutter.compileSdkVersion
        ndkVersion "27.0.12077973" // flutter.ndkVersion

        compileOptions {
            coreLibraryDesugaringEnabled true
            sourceCompatibility JavaVersion.VERSION_1_8
            targetCompatibility JavaVersion.VERSION_1_8
        }

        kotlinOptions {
            jvmTarget = '1.8'
        }

        sourceSets {
            main.java.srcDirs += 'src/main/kotlin'
        }

        defaultConfig {
            applicationId dartDefines.APP_ID
            dimension "default"
            applicationIdSuffix ""
            // You can update the following values to match your application needs.
            // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.
            minSdkVersion 21 // flutter.minSdkVersion
            targetSdkVersion 34 // flutter.targetSdkVersion
            versionCode flutterVersionCode.toInteger()
            versionName flutterVersionName
            multiDexEnabled true
        }

        signingConfigs {
            release {
                keyAlias keystoreProperties['keyAlias']
                keyPassword keystoreProperties['keyPassword']
                storeFile keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : null
                storePassword keystoreProperties['storePassword']
            }
        }

        buildTypes {
            release {
                signingConfig signingConfigs.release
                minifyEnabled true
                proguardFiles getDefaultProguardFile('proguard-android.txt')
            }
            debug {
                signingConfig signingConfigs.debug
            }
        }
    }

    flutter {
        source '../..'
    }

    dependencies {
        coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:2.1.3'
        implementation 'androidx.multidex:multidex:2.0.1'
        implementation 'androidx.window:window:1.3.0'
        implementation 'androidx.window:window-java:1.3.0'
    }